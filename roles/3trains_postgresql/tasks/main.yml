- name: "Install PostgreSQL and relate packages"
  include_role:
    name: 3trains_fastpackages
  vars:
    packages_list: "{{ pgsql.packages_list }}"

- block:
    - name: Downgrade systemd (only for containerized install), https://access.redhat.com/solutions/5605181
      become: yes
      yum:
        name: ftp://ftp.pbone.net/mirror/vault.centos.org/8.1.1911/BaseOS/x86_64/os/Packages/systemd-239-18.el8.x86_64.rpm
        state: present
        allow_downgrade: True
      register: systemd_version
    - name: Restart systemd
      become: yes
      command: systemctl daemon-reexec
      when: systemd_version.changed
  when: ansible_facts['virtualization_type'] in ['oci','containerd']

- stat:
    path: "{{ pgsql.pgdata }}/pg_hba.conf"
  register: pgdata_init

- name: "Init PostgresQL Db"
  command:
    cmd: /usr/bin/postgresql-setup initdb
    creates: /var/lib/pgsql/initdb.log
  register: datadir_init
  when:
    - pgdata_init is defined
    - pgdata_init.stat is defined
    - not pgdata_init.stat.exists

- name: "Ensure PostgreSQL accept connection from app servers"
  template:
    src: pg_hba.conf
    dest: /var/lib/pgsql/data/pg_hba.conf
    owner: postgres
    group: postgres
    mode: 0600
  notify:
    - restart postgres

- name: "Ensure PostgreSQL accept remote connection"
  template:
    src: postgresql.conf
    dest: /var/lib/pgsql/data/postgresql.conf
    owner: postgres
    group: postgres
    mode: 0600
  notify:
    - restart postgres
  when:
    - groups['pgsql'][0] != 'localhost'

- name: "Ensure the PostgreSQL service is running"
  service:
    name: postgresql
    state: started
    enabled: yes
  when: datadir_init is success

- name: "Create database {{ pgsql.db.name }}"
  community.postgresql.postgresql_db:
    name: "{{ item.name }}"
    encoding: UTF-8
    template: 'template0'
  with_items: "{{ pgsql.db }}"

- name: "Create user for database"
  community.postgresql.postgresql_user:
    db: "{{ item.name }}"
    name: "{{ item.user }}"
    password: "{{ item.password }}"
    priv: ALL
    state: present
  with_items: "{{ pgsql.db }}"
